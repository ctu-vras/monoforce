<?xml version="1.0" encoding="utf-8"?>

<launch>
  <arg name="input" default="points" doc="Input point cloud topic."/>
  <arg name="output" default="grid_map/terrain" doc="Output elevation map topic."/>
  <arg name="robot_frame" default="base_link" doc="Robot frame."/>
  <arg name="fixed_frame" default="odom" doc="Fixed frame."/>

  <!-- Launch cloud filter nodelet. -->
  <node name="range_filter" pkg="nodelet" type="nodelet" args="standalone cloud_proc/range_filter">
      respawn="true" respawn_delay="1.0" output="log">
    <rosparam subst_value="true">
        field: x
        min: 0.01
        max: 6.4
    </rosparam>
    <remap from="input" to="$(arg input)"/>
    <remap from="output" to="points_in_range"/>
  </node>
  <!-- Launch voxel grid filter nodelet. -->
  <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen"/>
  <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid pcl_manager" output="screen">
    <remap from="~input" to="/points_in_range"/>
    <remap from="~output" to="/points_downsampled"/>
    <rosparam>
      filter_field_name: z
      filter_limit_min: -1.2
      filter_limit_max: 0.2
      filter_limit_negative: False
      leaf_size: 0.1
    </rosparam>
  </node>

  <!-- Publish robot tf as pose.-->
  <node pkg="monoforce_navigation" type="tf_to_pose_publisher" name="robot_pose_publisher">
    <param name="from_frame" type="string" value="$(arg fixed_frame)"/>
    <param name="to_frame" type="string" value="$(arg robot_frame)"/>
  </node>

  <!-- Launch elevation mapping node. -->
  <node pkg="elevation_mapping" type="elevation_mapping" name="elevation_mapping" output="screen">
    <rosparam command="load" file="$(dirname)/../config/elevation_mapping/robots/marv.yaml"/>
    <rosparam command="load" file="$(dirname)/../config/elevation_mapping/postprocessing/postprocessor_pipeline.yaml"/>

    <remap from="elevation_mapping/elevation_map_raw" to="$(arg output)"/>
  </node>

</launch>
